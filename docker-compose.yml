version: "3.9"

services:
  web:
    build:
      context: .
      args:
        RAILS_ENV: development
        BUNDLE_WITHOUT: ""
    command: ./bin/rails server -b 0.0.0.0 -p 3000
    volumes:
      - .:/rails:cached
      - bundle:/usr/local/bundle
    environment:
      RAILS_ENV: development
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-dns2rss_development}
      POSTGRES_USER: ${POSTGRES_USER:-dns2rss}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dns2rss}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy

  cron:
    build:
      context: .
      args:
        RAILS_ENV: development
        BUNDLE_WITHOUT: ""
    command: >-
      bash -lc "bundle exec whenever --update-crontab && cron -f"
    volumes:
      - .:/rails:cached
      - bundle:/usr/local/bundle
    environment:
      RAILS_ENV: development
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-dns2rss_development}
      POSTGRES_USER: ${POSTGRES_USER:-dns2rss}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dns2rss}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dns2rss_development}
      POSTGRES_USER: ${POSTGRES_USER:-dns2rss}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dns2rss}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  bundle:
  postgres-data:
